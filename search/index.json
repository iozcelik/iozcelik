[{"content":"MSSQL 2016 ile desteklenmeye başlayan JSON kolonlar çok faydalı olmasına rağmen şu anda Entity Framework Core üzerinden sorgulanamıyor durumda.\nBu durum ise bir çok yazılımcı için bu kolonları nasıl saklayacağı ve sorgulayacağı gibi soruları akıllara getirmektedir.\nEF Core kullanmaya başladıktan sonra kendimi tekrar etmemek adına yazdığım kodları paket haline getirip, NUGET paket yöneticisine yükledim. (GitHub | Nuget)\nPaketin kullanımı kolay, EF Core tarafından desteklenen diğer DBFunction kullanım şekliyle aynı.\nPaketi Nuget üzerinden yüklemek için “Packet Manager Console” üzerinden aşağıdaki komutu çalıştırmamız gerekiyor.\nPM\u0026gt; Install-Package EntityFrameworkCore.SqlServer.JsonExtention -Version 1.0.0 Paket projemize dahil olduktan sonra ise DbContext class’ında bulunan OnConfiguring metodunu override ediyoruz ve bu pakete ekliyoruz.\nprotected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder) { base.OnConfiguring(optionsBuilder); optionsBuilder.UseJsonFunctions(); } Artık Json fonksiyonlarını projemizde kullanabiliriz.\nPeki bir kolonun Json olduğunu nasıl belirteceğiz? Onun içinde model builder da ilgili kolon için .HasJsonConversion metodunu kullanacağız. Örneğin;\nprotected override void OnModelCreating(ModelBuilder modelBuilder) { modelBuilder.Entity\u0026lt;Customer\u0026gt;().Property(p =\u0026gt; p.Company).HasJsonConversion(); modelBuilder.Entity\u0026lt;Customer\u0026gt;().Property(p =\u0026gt; p.ContactDetail).HasJsonConversion(); modelBuilder.Entity\u0026lt;Customer\u0026gt;().Property(p =\u0026gt; p.LuckyNumbers).HasJsonConversion(); modelBuilder.Entity\u0026lt;Customer\u0026gt;().Property(p =\u0026gt; p.MenuItems).HasJsonConversion(); } Son olarak ise nasıl sorgulayacağımıza bakalım;\nvar phones = _context.Customers.Where(w =\u0026gt; EF.Functions.JsonValue(w.ContactDetail, \u0026#34;Phone\u0026#34;) != null) .OrderByDescending(o =\u0026gt; EF.Functions.JsonValue(o.ContactDetail, \u0026#34;Phone\u0026#34;)) .Select(s =\u0026gt; EF.Functions.JsonValue(s.ContactDetail, \u0026#34;Phone\u0026#34;)) .ToList(); Evet, tüm kullanım bu şekilde. Umarım Entity Framework doğal Json desteğini ekleyene kadar herkese faydalı olur.\n","date":"2020-07-15T00:00:00Z","permalink":"https://iozcelik.github.io/iozcelik/p/ef-core-3-1-ile-mssql-veritabaninda-json-kolonlari-kullanmak-ve-sorgulamak/","title":"EF Core 3.1 ile MSSQL veritabanında JSON kolonları kullanmak ve sorgulamak"},{"content":"Sql server üzerinden linked server oluşturarak diğer ilişkisel veritabanlarına sorgu atmak uzun zamandır mevcut olan bir özellik. Ancak NoSql veritabanları için ise durum o kadar kolay değildi. Aslında Microsoft Sql Server 2016 ile duyurduğu PolyBase özelliği ile Hadoop ve Azure Blob Storage için bağlantılar kurma özelliğini eklemişti. MongoDB’yi sorgulamak için ise 2019 versiyonunu beklemek gerekecekti.\nPeki ya biz Sql Server 2019’dan önceki versiyonu kullanıyorsak? Burada çözüm olarak Linked server ile MongoDB veritabanına bağlanmak kalıyor. Bu konuda Türkçe çok fazla kaynak olmadığından dolayı detaylı bir şekilde bu konuyu anlatmaya çalışacağım.\nÖncelikle MongoDB sitesinden güncel BI adaptörünü ve Github üzerinden güncel ODBC driverını indirip kuralım.\nKurulumlar bittikten sonra ilk önce indirmiş olduğumuz BI adaptörünü sistemimize Windows Service olarak kuralım. Bunun için yapmamız gereken Converter For BI klasörüne giderek “mongosqld.conf” isimli bir dosya oluşturmak.\nC:\\Program Files\\MongoDB\\Connector for BI\\[güncel versiyon]\\bin  2.13 indirilen BI connector’un versiyon numarası \nBu dosya bize BI connector’un hangi veritabanına bağlanacağını ve diğer ayarlarını yapmamıza imkan veriyor. Oluşturulan dosyasının içerisine aşağıda ki ayarları ekleyelim.\nsystemLog:path:\u0026#39;C:\\logs\\mongosqld.log\u0026#39;net:bindIp:\u0026#39;127.0.0.1\u0026#39;port:3307mongodb:net:uri:\u0026#34;localhost:27017\u0026#34;schema:maxVarcharLength:8000Burada dikkat edilmesi gerekenler;\n Sistem logunu yazmak için izin yoksa BI converter başlamayacaktır. Dosya izinlerinden emin olalım. BindIp alanında daha sonra oluşturacağımız DSN’in hangi ip adresinden gelebileceği bilgisi mevcut. Birden fazla adres olabilir ancak server ise localhost’u kullanmayalım onun yerine Ip adresini açıkça yazalım. MaxVarcharLength eklememizin sebebi olası bir hatayı almamak için. (Olası hata: “OLE DB provider “MSDASQL” for linked server “M” returned message “Requested conversion is not supported.”.”) Eğer ilgili sunucuda tek bir veritabanına bağlanmak istiyorsanız şema adının belirtilmesi gerekir. Şimdi sıra geldi Windows service olarak BI Connector’u başlatmaya. Bunun için aşağıdaki satırlar cmd’de (admin modda) execute edilir.  \u0026quot;C:\\Program Files\\MongoDB\\Connector for BI\\2.13\\bin\\mongosqld.exe\u0026quot; install --config \u0026quot;C:\\Program Files\\MongoDB\\Connector for BI\\2.13\\bin\\mongosqld.conf\u0026quot; Artık BI Connector, Windows service olarak yüklendi. İster cmd’den ister “Services” ekranından başlatabilirsiniz. Cmd için aşağıdaki satırı kullanabilirsiniz.\nnet start mongosql Bu adımlardan sonra sırada MongoDB için bir tane Data Source Name (DSN) oluşturalım. DSN oluşturmak için “Başlat (Start)” üzerinden ODBC yazabiliriz.\n Bilgisayarınızda ya da serverda bulunan data sourcelara buradan ulaşılabilir \nAçılan pencerede “System DSN” sekmesine geçiş yapalım ve açılan pencereden Unicode Driver’ı seçerek “Finish” butonuna basalım.\n Birden fazla veritabanı eklemesini bu ekrandan yapabilirsiniz. \nDaha sonra Configure butonu ile ayarlarımızı yapalım.\n Ayarlar kısmında dikkat edilmesi gereken ip ve port bilgisinin BI connector içerisinde bulunan config dosyasında bulunan ayarlarla aynı olmasıdır. Database isimleri genelde otomatik dolmuyor. Mongo veritabanı adını elle yazabilirsiniz. \nAyarları yaptıktan sonra Test dediğimizde “Connection Successful” görmemiz gerekmekte. Buraya kadar MongoDB için ayarlarımızı yaptık. Şimdi de MSSQL üzerinden Linked Server oluşturma işlemine başlayalım. Bunun için Object Explorer’dan Server Object -\u0026gt; Linked Server seçimlerini yaptıktan sonra yeni bir Linked Server eklemesi yapalım.\n Daha önce eklediğimden hata vermişti:) \nEkleme tamamlandıktan sonra şimdi test etme zamanı. Bir select sorgusu ile mongo veritabanımızdan kayıtları alalım.\n Sorgumuz başarılı bir şekilde çalıştı \nTestimiz başarılı oldu. Bundan sonra rahat bir şekilde Mongo veritabanımıza Sql Server üzerinden ulaşabiliriz.\nEk bilgi olarak Mongo veritabanını sorgularken MySql Syntax kullanılamakta.\n","date":"2020-06-06T00:00:00Z","permalink":"https://iozcelik.github.io/iozcelik/p/sql-server-uzerinden-mongodb-veritabanina-baglanmak/","title":"Sql Server üzerinden MongoDB veritabanına bağlanmak"},{"content":"Selamlar, ben İsmail Özçelik.\nProfesyonel Alanım Yazılım… Yazılım dünyasına 2002 yılında PHP siteler ve forum siteleri yaparak giriş yaptım. Bu süreçte Flash Action Script, Delphi, C++ gibi bir çok dilde araştırmalar ve çalışmalar da ayrıca yapıyordum. 2007 yılında İstanbul Üniversitesi, Bilgisayar Mühendisliği bölümünü kazandığımda gerçekten istediğim bir işi yapmak için kendi alanımda eğitim almaya başladım.\nAldığım eğitim ile birlikte 2012 yılında profesyonel yazılım dünyasına da adım atmış oldum. Profesyonel yazılım dünyasına ilk Java kullanarak adım atsam da yıllar içinde artık bir .NET ile uygulama geliştirmeyi daha fazla tercih etmeye başladım.\nŞu an Hayen Teknoloji firmasında Senior Yazılım Uzmanı olarak çalışmaktayım.\nŞehirler ve Ulaşım Sistemleri Kişisel Hobim… Ortaokul yıllarından itibaren ulaşıma ilgim bulunmaktaydı. Hatta o dönem çocuk trafik polisi dahi olmuşluğum vardı. Bu ilgim araçlardan ziyade ulaşım sistemleri, kavşak ve yol tasarımlarıyla ilişkili olunca, lisans eğitimimden sonra İstanbul Teknik Üniversitesi’nde Ulaştırma Mühendisliği bölümünde yüksek lisans yapmaya başladım. Eğitimimi iş yoğunluğum nedeniyle tamamlayamasam da; almak istediğim bir çok dersi alarak çok kıymetli akademisyenlerden profesyonel bilgiler edindim.\nŞehirleşmeye olan ilgim ise aslında ulaşım konusuyla alakalı diyebiliriz. Üniversite yıllarına kadar yaşadığım Sivas’ta, yapılamayan ya da neden yapılamadığını anlamadığım bir çok konu için belediye ile ya da gerekli yetkililerle sürekli görüşürdüm. Bu ilgim sayesinde Sivas’ta yapılan bir yarışmada ikincilik ödülünü de aldım. Üniversite ve iş hayatı yıllarında artık yurt dışı şehirleri görmeye başladıkça ve yurt içinde de neredeyse yirmiden fazla şehri gezince, bu konuda yapılması gereken ve yapılabilecek ne kadar fazla konu olduğunu görmüş oldum.\nKısaca… Sivas Cumhuriyet Anadolu Lisesi’nden mezun oldun olduktan sonra İstanbul Üniversitesi Bilgisayar Mühendisliği bölümünü bitirdim. Daha sonra İstanbul Teknik Üniversitesi Ulaştırma Mühendisliğinde yüksek lisans başladım, iki dönemi bitirdikten sonra iş hayatımda ki yoğunluktan dolayı eğitimime ara verdim.\n","date":"2020-06-01T00:00:00Z","permalink":"https://iozcelik.github.io/iozcelik/p/merhaba-dunya/","title":"Merhaba Dünya"}]